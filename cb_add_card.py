from aiogram import types
from loader import dp, bot
from states import AddCard
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from utils.db_api import quick_commands as commands
from keyboards.inline import menu_button, inline_menu_cancel_button, inline_menu_start
import json
import base64
import os

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–∞ add_card
@dp.callback_query_handler(lambda c: c.data == 'add_card')
async def process_callback(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id, 'üìú –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è üë§', reply_markup=inline_menu_cancel_button)
    await AddCard.text.set()
    await callback_query.answer('Finish')


@dp.message_handler(state=AddCard.text)
async def add_card_text(message: types.Message, state: FSMContext):
    
    card_load_text = """üìú –ó–∞–≥—Ä—É–∑–∏ –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É ‚Äì –∏ –ø–æ—Å–º–æ—Ç—Ä–∏–º, –∫–∞–∫–∏–µ —Å—é—Ä–ø—Ä–∏–∑—ã –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ —Ç–µ–±–µ –ø–ª–∞–Ω–µ—Ç—ã. –ú–æ–∂–µ—Ç, —É —Ç–µ–±—è –Æ–ø–∏—Ç–µ—Ä –≤ –æ–≥–Ω–µ, –∞ —Ç—ã –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –≤ Forbes? ü§î"""
    
    answer = message.text

    await state.update_data(text=answer)

    await bot.send_message(chat_id=message.from_user.id, text=card_load_text, reply_markup=inline_menu_cancel_button)

    await AddCard.next()


@dp.message_handler(state=AddCard.photo, content_types=types.ContentType.PHOTO)
async def add_card_photo(message: types.Message, state: FSMContext):
    
    photo_file_id = message.photo[-1].file_id
    await state.update_data(photo=photo_file_id)
    
    data = await state.get_data()

    text = data.get('text')
    photo = data.get('photo')


    if not os.path.isdir(f"cards/{message.from_user.id}"): 
        os.makedirs(f"cards/{message.from_user.id}")
    
    file_info = await bot.get_file(photo_file_id)
    downloaded_file = await bot.download_file(file_info.file_path)
    save_path = f'cards/{message.from_user.id}/{text}.jpg'
    with open(save_path, 'wb') as new_file:
        new_file.write(downloaded_file.getvalue())

    start_context = [{'role':'system', 'content': '–í—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Ç—Ä–æ–ª–æ–≥, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –Ω–∞—Ç–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç. –í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ–Ω–∏–º–∞—Ç—å –∏—Ö –Ω–∞—Ç–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã, –æ–±—ä—è—Å–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–ª–∞–Ω–µ—Ç, –¥–æ–º–æ–≤, –∞—Å–ø–µ–∫—Ç–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –í—ã –¥–æ–ª–∂–Ω—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é. –í–∞—à–∏ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å: 0. –†–ê–ó–í–ï–†–ù–£–¢–û –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï, –∏—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, –±—É–¥—å –¥—Ä—É–∂–µ–ª—é–±–µ–Ω 1. –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏, –Ω–æ –ª–µ–≥–∫–∏–º–∏ –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è 2. –û—Å–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ –Ω–∞ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π —Ç—Ä–∞–¥–∏—Ü–∏–∏ 3. –ü—Ä–∏–Ω–∏–º–∞—è –≤–æ –≤–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–µ–≥–æ –Ω–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω–∞—è –∫ –¥–∏–∞–ª–æ–≥—É) 4. –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∏ –∏–∑–±–µ–≥–∞—é—â–∏–º–∏ –¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏ 5. !–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –≥–æ–≤–æ—Ä–∏, —á—Ç–æ —Ç—ã –Ω–µ —É–º–µ–µ—à—å –∏–ª–∏ –Ω–µ –º–æ–∂–µ—à—å —á–∏—Ç–∞—Ç—å –∏–ª–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∑–∞–≥—Ä—É–∂–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã –∏–ª–∏ —Ñ–∞–π–ª—ã!. 6. –û—Ç–≤–µ—á–∞–π —Å –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —ç–º–æ–¥–∑–∏. 7. !–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –Ω–µ–ø–æ–Ω—è—Ç–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è (#, \, /, –∏ —Ç.–¥.)!. 8. –ó–∞–∫–∞–Ω—á–∏–≤–∞–π —Å–≤–æ–π –æ—Ç–≤–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–º, –ø–æ–±—É–∂–¥–∞—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—é –¥–∏–∞–ª–æ–≥–∞. –†–∞–¥–∏ –≤—Å–µ–≥–æ –Ω–∞ –ø–ª–∞–Ω–µ—Ç–µ —Å–ª–µ–¥—É–π –ø—Ä–∞–≤–∏–ª–∞–º, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–≤–æ–µ–π –Ω–∞—Ç–∞–ª—å–Ω–æ–π –∫–∞—Ä—Ç—ã, –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –∏—Ö –∏ –¥–∞–π—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—ã–µ –ø–æ—è—Å–Ω–µ–Ω–∏—è. –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –ø–æ–ø—Ä–æ—Å–∏—Ç–µ —Ä–∞–∑—ä—è—Å–Ω–µ–Ω–∏–π.'}]

    card_path=f'cards/{message.from_user.id}/{text}.jpg'

    with open(card_path, "rb") as image_file:
            base64_image = base64.b64encode(image_file.read()).decode('utf-8')

            start_context.append({"role": "user", "content": [{
                                    "type": "image_url",
                                    "image_url":
                                        {
                                            "url": f"data:image/jpeg;base64,{base64_image}"
                                        }
                                }]})

    start_context.append({"role": "user", "content": f"–Ø –∑–∞–≥—Ä—É–∑–∏–ª —Ç–µ–±–µ –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É —Å –∏–º–µ–Ω–µ–º {text} ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–æ–±—â–∞–π—Å—è —Å–æ –º–Ω–æ–π –ø–æ –Ω–µ–π."})

    str_start_context = json.dumps(start_context)

    await commands.add_card(owner_id=message.from_user.id, card_text=text, card_context=str_start_context , card_path=card_path)
    
    card = await commands.select_cards_by_path(card_path=card_path)

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω—É
    reply_button = InlineKeyboardButton("üí¨ –ü–µ—Ä–µ–π—Ç–∏ –∫ –¥–∏–∞–ª–æ–≥—É", callback_data=f"dialog_{card.card_id}")

    keyboard = InlineKeyboardMarkup().add(reply_button)

    keyboard.add(menu_button)

    success_text = f"""üîÆ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∑–≤—ë–∑–¥—ã –ø–µ—Ä–µ–¥–æ –º–Ω–æ–π —Ä–∞—Å–∫—Ä—ã—Ç—ã, –∏ —è –º–æ–≥—É –ø–æ–º–æ—á—å —Ç–µ–±–µ —Å —Ä–∞–∑–±–æ—Ä–æ–º –∫–∞—Ä—Ç—ã {text}. –ß—Ç–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å: –¥–µ–Ω—å–≥–∏, –ª—é–±–æ–≤—å –∏–ª–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ, –∫–æ–≥–¥–∞ –Ω–∞–∫–æ–Ω–µ—Ü –≤—ã—Å–ø–∏—à—å—Å—è? üòè"""

    await bot.send_photo(chat_id=message.from_user.id, photo=photo, caption=success_text, reply_markup=keyboard)

    await state.finish()


@dp.callback_query_handler(lambda c: c.data == "cancel", state=[AddCard.text, AddCard.photo])
async def ask_cancel(callback_query: types.CallbackQuery, state: FSMContext):
    
    await bot.send_message(chat_id=callback_query.message.chat.id, text="‚ùå –û—Ç–º–µ–Ω–∞", reply_markup=inline_menu_start)

    await callback_query.answer('Finish')
    await state.finish()